CREATE TABLE GEOGRAPHY.CITIES (
  ID SERIAL PRIMARY KEY,
  NAME VARCHAR(255) NOT NULL,
  STATE_ID INT NOT NULL,
  STATE_CODE VARCHAR(255) NOT NULL,
  COUNTRY_ID INT NOT NULL,
  COUNTRY_CODE CHAR(2) NOT NULL,
  LATITUDE DECIMAL(10,8) NOT NULL,
  LONGITUDE DECIMAL(11,8) NOT NULL,
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP NULL DEFAULT NULL,
  FLAG BOOLEAN NOT NULL DEFAULT TRUE,
  WIKIDATAID VARCHAR(255)
);
ALTER TABLE GEOGRAPHY.CITIES ADD FOREIGN KEY (STATE_ID) REFERENCES GEOGRAPHY.STATES(ID);
ALTER TABLE GEOGRAPHY.CITIES ADD FOREIGN KEY (COUNTRY_ID) REFERENCES GEOGRAPHY.COUNTRIES(ID);

CREATE TABLE GEOGRAPHY.COUNTRIES (
  ID SERIAL PRIMARY KEY,
  NAME VARCHAR(100) NOT NULL,
  ISO3 CHAR(3),
  NUMERIC_CODE CHAR(3),
  ISO2 CHAR(2),
  PHONECODE VARCHAR(255),
  CAPITAL VARCHAR(255),
  CURRENCY VARCHAR(255),
  CURRENCY_NAME VARCHAR(255),
  CURRENCY_SYMBOL VARCHAR(255),
  TLD VARCHAR(255),
  NATIVE VARCHAR(255),
  REGION VARCHAR(255),
  REGION_ID INT,
  SUBREGION VARCHAR(255),
  SUBREGION_ID INT,
  NATIONALITY VARCHAR(255),
  TIMEZONES TEXT,
  TRANSLATIONS TEXT,
  LATITUDE DECIMAL(10,8),
  LONGITUDE DECIMAL(11,8),
  EMOJI VARCHAR(191),
  EMOJIU VARCHAR(191),
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP NULL DEFAULT NULL,
  FLAG BOOLEAN NOT NULL DEFAULT TRUE,
  WIKIDATAID VARCHAR(255)
);
ALTER TABLE GEOGRAPHY.COUNTRIES ADD FOREIGN KEY (REGION_ID) REFERENCES GEOGRAPHY.REGIONS(ID);
ALTER TABLE GEOGRAPHY.COUNTRIES ADD FOREIGN KEY (SUBREGION_ID) REFERENCES GEOGRAPHY.SUBREGIONS(ID);

CREATE TABLE GEOGRAPHY.REGIONS (
  ID SERIAL PRIMARY KEY,
  NAME VARCHAR(100) NOT NULL,
  TRANSLATIONS TEXT,
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP NULL DEFAULT NULL,
  FLAG BOOLEAN NOT NULL DEFAULT TRUE,
  WIKIDATAID VARCHAR(255)
);
CREATE TABLE GEOGRAPHY.STATES (
  ID SERIAL PRIMARY KEY,
  NAME VARCHAR(255) NOT NULL,
  COUNTRY_ID INT NOT NULL,
  COUNTRY_CODE CHAR(2) NOT NULL,
  FIPS_CODE VARCHAR(255),
  ISO2 VARCHAR(255),
  TYPE VARCHAR(191),
  LATITUDE DECIMAL(10,8),
  LONGITUDE DECIMAL(11,8),
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP NULL DEFAULT NULL,
  FLAG BOOLEAN NOT NULL DEFAULT TRUE,
  WIKIDATAID VARCHAR(255)
);
ALTER TABLE GEOGRAPHY.STATES ADD FOREIGN KEY (COUNTRY_ID) REFERENCES GEOGRAPHY.COUNTRIES(ID);



CREATE TABLE GEOGRAPHY.SUBREGIONS (
  ID SERIAL PRIMARY KEY,
  NAME VARCHAR(100) NOT NULL,
  TRANSLATIONS TEXT,
  REGION_ID INT NOT NULL,
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP NULL DEFAULT NULL,
  FLAG BOOLEAN NOT NULL DEFAULT TRUE,
  WIKIDATAID VARCHAR(255)
);
ALTER TABLE GEOGRAPHY.SUBREGIONS ADD FOREIGN KEY (REGION_ID) REFERENCES GEOGRAPHY.REGIONS(ID);

CREATE TABLE GEOGRAPHY.ZIPCODES (
  ID SERIAL PRIMARY KEY,
  ZIP_CODE VARCHAR(20) NOT NULL,
  PLACE VARCHAR(255),
  STATE_ID INT NOT NULL,
  PROVINCE VARCHAR(255),
  PROVINCE_CODE VARCHAR(255),
  COMMUNITY VARCHAR(255),
  COMMUNITY_CODE VARCHAR(255),
  LATITUDE DECIMAL(10,8),
  LONGITUDE DECIMAL(11,8),
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP NULL DEFAULT NULL,
  FLAG BOOLEAN NOT NULL DEFAULT TRUE
);

ALTER TABLE GEOGRAPHY.ZIPCODES ADD FOREIGN KEY (STATE_ID) REFERENCES GEOGRAPHY.STATES(ID);

CREATE TABLE GEOGRAPHY.DISTRICTS (
  ID SERIAL PRIMARY KEY,
  NAME VARCHAR(255) NOT NULL,
  STATE_ID INT NOT NULL,
  COUNTRY_ID INT NOT NULL,
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP NULL DEFAULT NULL,
  FLAG BOOLEAN NOT NULL DEFAULT TRUE
);
ALTER TABLE GEOGRAPHY.DISTRICTS ADD FOREIGN KEY (STATE_ID) REFERENCES GEOGRAPHY.STATES(ID);
ALTER TABLE GEOGRAPHY.DISTRICTS ADD FOREIGN KEY (COUNTRY_ID) REFERENCES GEOGRAPHY.COUNTRIES(ID);


CREATE TABLE GEOGRAPHY.INDIAN_CITIES_TOWNS (
  ID SERIAL PRIMARY KEY,
  NAME VARCHAR(255) NOT NULL,
  DIVISON VARCHAR(255) NOT NULL,
  CITIES_ID INT DEFAULT NULL,
  DISTRICT_ID INT DEFAULT NULL,
  STATE_ID INT NOT NULL,
  COUNTRY_ID INT NOT NULL,
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP NULL DEFAULT NULL,
  FLAG BOOLEAN NOT NULL DEFAULT TRUE
);

ALTER TABLE GEOGRAPHY.INDIAN_CITIES_TOWNS ADD FOREIGN KEY (CITIES_ID) REFERENCES GEOGRAPHY.CITIES(ID);
ALTER TABLE GEOGRAPHY.INDIAN_CITIES_TOWNS ADD FOREIGN KEY (DISTRICT_ID) REFERENCES GEOGRAPHY.DISTRICTS(ID);
ALTER TABLE GEOGRAPHY.INDIAN_CITIES_TOWNS ADD FOREIGN KEY (STATE_ID) REFERENCES GEOGRAPHY.STATES(ID);
ALTER TABLE GEOGRAPHY.INDIAN_CITIES_TOWNS ADD FOREIGN KEY (COUNTRY_ID) REFERENCES GEOGRAPHY.COUNTRIES(ID);








-- Indexes for GEOGRAPHY.CITIES
CREATE INDEX idx_cities_state_id ON GEOGRAPHY.CITIES (STATE_ID);
CREATE INDEX idx_cities_country_id ON GEOGRAPHY.CITIES (COUNTRY_ID);
CREATE INDEX idx_cities_state_code ON GEOGRAPHY.CITIES (STATE_CODE);
CREATE INDEX idx_cities_country_code ON GEOGRAPHY.CITIES (COUNTRY_CODE);
CREATE INDEX idx_cities_name ON GEOGRAPHY.CITIES (NAME);

-- Indexes for GEOGRAPHY.COUNTRIES
CREATE INDEX idx_countries_iso2 ON GEOGRAPHY.COUNTRIES (ISO2);
CREATE INDEX idx_countries_iso3 ON GEOGRAPHY.COUNTRIES (ISO3);
CREATE INDEX idx_countries_region_id ON GEOGRAPHY.COUNTRIES (REGION_ID);
CREATE INDEX idx_countries_subregion_id ON GEOGRAPHY.COUNTRIES (SUBREGION_ID);

-- Indexes for GEOGRAPHY.REGIONS
CREATE INDEX idx_regions_name ON GEOGRAPHY.REGIONS (NAME);

-- Indexes for GEOGRAPHY.STATES
CREATE INDEX idx_states_country_id ON GEOGRAPHY.STATES (COUNTRY_ID);
CREATE INDEX idx_states_country_code ON GEOGRAPHY.STATES (COUNTRY_CODE);
CREATE INDEX idx_states_name ON GEOGRAPHY.STATES (NAME);

-- Indexes for GEOGRAPHY.SUBREGIONS
CREATE INDEX idx_subregions_region_id ON GEOGRAPHY.SUBREGIONS (REGION_ID);
CREATE INDEX idx_subregions_name ON GEOGRAPHY.SUBREGIONS (NAME);

-- Indexes for GEOGRAPHY.ZIPCODES
-- Indexes for GEOGRAPHY.ZIPCODES
CREATE INDEX idx_zipcodes_zip_code ON GEOGRAPHY.ZIPCODES (ZIP_CODE);
CREATE INDEX idx_zipcodes_state_code ON GEOGRAPHY.ZIPCODES (STATE_ID);
CREATE INDEX idx_zipcodes_province_code ON GEOGRAPHY.ZIPCODES (PROVINCE_CODE);
CREATE INDEX idx_zipcodes_community_code ON GEOGRAPHY.ZIPCODES (COMMUNITY_CODE);


-- Indexes for GEOGRAPHY.DISTRICTS
CREATE INDEX idx_districts_state_id ON GEOGRAPHY.DISTRICTS (STATE_ID);
CREATE INDEX idx_districts_country_id ON GEOGRAPHY.DISTRICTS (COUNTRY_ID);
CREATE INDEX idx_districts_name ON GEOGRAPHY.DISTRICTS (NAME);

-- Indexes for GEOGRAPHY.INDIAN_CITIES_TOWNS
CREATE INDEX idx_indian_cities_towns_cities_id ON GEOGRAPHY.INDIAN_CITIES_TOWNS (CITIES_ID);
CREATE INDEX idx_indian_cities_towns_district_id ON GEOGRAPHY.INDIAN_CITIES_TOWNS (DISTRICT_ID);
CREATE INDEX idx_indian_cities_towns_state_id ON GEOGRAPHY.INDIAN_CITIES_TOWNS (STATE_ID);
CREATE INDEX idx_indian_cities_towns_country_id ON GEOGRAPHY.INDIAN_CITIES_TOWNS (COUNTRY_ID);
CREATE INDEX idx_indian_cities_towns_name ON GEOGRAPHY.INDIAN_CITIES_TOWNS (NAME);

-- Unique constraints
ALTER TABLE GEOGRAPHY.INDIAN_CITIES_TOWNS
ADD CONSTRAINT unique_indian_cities_towns
UNIQUE (NAME, DIVISON, CITIES_ID, STATE_ID, COUNTRY_ID, FLAG);

ALTER TABLE GEOGRAPHY.CITIES
ADD CONSTRAINT unique_cities
UNIQUE (NAME, STATE_ID, COUNTRY_ID, FLAG);

ALTER TABLE GEOGRAPHY.COUNTRIES
ADD CONSTRAINT unique_countries
UNIQUE (NAME, FLAG);

ALTER TABLE GEOGRAPHY.REGIONS
ADD CONSTRAINT unique_regions
UNIQUE (NAME, FLAG);

ALTER TABLE GEOGRAPHY.STATES
ADD CONSTRAINT unique_states
UNIQUE (NAME, COUNTRY_ID, TYPE, FLAG);

ALTER TABLE GEOGRAPHY.SUBREGIONS
ADD CONSTRAINT unique_subregions
UNIQUE (NAME, REGION_ID, FLAG);

ALTER TABLE GEOGRAPHY.ZIPCODES
ADD CONSTRAINT unique_zipcode_combination
UNIQUE (ZIP_CODE,PLACE, STATE_ID, PROVINCE_CODE, COMMUNITY_CODE, FLAG);

ALTER TABLE GEOGRAPHY.DISTRICTS
ADD CONSTRAINT unique_districts
UNIQUE (NAME, STATE_ID, COUNTRY_ID, FLAG);
